<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab tab_name="Computing Time" containers="1">
   <Container>
    <DockSplitter count="1" sizes="1" orientation="-">
     <DockArea name="...">
      <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
       <range right="102.257667" bottom="0.827281" top="30.600216" left="2.336273"/>
       <limitY/>
       <curve name="/planning/scenario_planning/motion_velocity_smoother/calculation_time/data" color="#1f77b4"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="Velocity Acceleration" containers="1">
   <Container>
    <DockSplitter count="1" sizes="1" orientation="-">
     <DockSplitter count="2" sizes="0.5;0.5" orientation="|">
      <DockSplitter count="2" sizes="0.500401;0.499599" orientation="-">
       <DockArea name="...">
        <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
         <range right="102.257672" bottom="-0.347222" top="14.236112" left="2.250248"/>
         <limitY/>
         <curve name="/planning/scenario_planning/motion_velocity_smoother/closest_max_velocity/data" color="#d62728"/>
         <curve name="/vehicle/status/velocity_status/longitudinal_velocity" color="#0e33ff"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
         <range right="102.257672" bottom="-0.790324" top="1.043668" left="2.250248"/>
         <limitY/>
         <curve name="/planning/scenario_planning/motion_velocity_smoother/closest_acceleration/data" color="#1ac938"/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockArea name="...">
       <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
        <range right="102.257672" bottom="-3.245968" top="1.673203" left="2.250248"/>
        <limitY/>
        <curve name="/planning/scenario_planning/motion_velocity_smoother/closest_jerk/data" color="#1f77b4"/>
       </plot>
      </DockArea>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="1"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <default time_axis="" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="10"/>
   <boolean_strings_to_number value="false"/>
   <remove_suffix_from_strings value="false"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a ScatterXY series from arrays.&#xa;&#xa; series_name: name of the created ScatterXY series&#xa; prefix:      prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value.&#xa;             if [nil], the index of the array will be used.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{N}/position/x&#xa;   /trajectory/node.{N}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   CreateSeriesFromArray( &quot;my_trajectory&quot;, &quot;/trajectory/node&quot;,  &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;]]--&#xa;&#xa;function CreateSeriesFromArray( series_name, prefix, suffix_X, suffix_Y, timestamp )&#xa;  --- create a new series or overwite the previous one&#xa;  new_series = MutableScatterXY.new(series_name)&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_x == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS2 Topic Subscriber"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

